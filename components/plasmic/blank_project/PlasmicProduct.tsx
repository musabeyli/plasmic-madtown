// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wA73ZswqroE6r1m1xaxGJ1
// Component: x0eSRYr8QK
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import FooterComponent from "../../FooterComponent"; // plasmic-import: Mfi3gMBJIGb/component

import { useScreenVariants as useScreenVariantsabUxTrbG0Cf5V } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: AbUXTrbG0Cf5V/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: wA73ZswqroE6r1m1xaxGJ1/projectcss
import sty from "./PlasmicProduct.module.css"; // plasmic-import: x0eSRYr8QK/css

import BarsIcon from "./icons/PlasmicIcon__Bars"; // plasmic-import: 3JUTMmhnvK/icon
import TimesIcon from "./icons/PlasmicIcon__Times"; // plasmic-import: mACcuMntJR/icon
import LogoWhitesvgIcon from "./icons/PlasmicIcon__LogoWhitesvg"; // plasmic-import: _uv80oNPXUZ/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: qusUk_rNgS/icon
import LeftArrowSvgrepoComsvgIcon from "./icons/PlasmicIcon__LeftArrowSvgrepoComsvg"; // plasmic-import: TCz-nG2Cjc9Z/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: PjBdQV0WPqJ/icon
import Logo4SvgIcon from "./icons/PlasmicIcon__Logo4Svg"; // plasmic-import: 8T83M7j8EW/icon
import ShoppingCartIcon from "./icons/PlasmicIcon__ShoppingCart"; // plasmic-import: T3tWtDwVAV/icon
import HeartOIcon from "./icons/PlasmicIcon__HeartO"; // plasmic-import: HQqpC8TUl7/icon
import ExpandIcon from "./icons/PlasmicIcon__Expand"; // plasmic-import: cLu-LSFoFE/icon
import StarIcon from "./icons/PlasmicIcon__Star"; // plasmic-import: tm2YInFcsn/icon
import ButtonArrowIcon from "./icons/PlasmicIcon__ButtonArrow"; // plasmic-import: 0SnOLqzX9U0/icon

export type PlasmicProduct__VariantMembers = {};

export type PlasmicProduct__VariantsArgs = {};
type VariantPropType = keyof PlasmicProduct__VariantsArgs;
export const PlasmicProduct__VariantProps = new Array<VariantPropType>();

export type PlasmicProduct__ArgsType = {};
type ArgPropType = keyof PlasmicProduct__ArgsType;
export const PlasmicProduct__ArgProps = new Array<ArgPropType>();

export type PlasmicProduct__OverridesType = {
  root?: p.Flex<"div">;
  footerComponent?: p.Flex<typeof FooterComponent>;
  foreground2?: p.Flex<"div">;
  h3?: p.Flex<"h3">;
  header?: p.Flex<"div">;
  bigPlants?: p.Flex<"div">;
  cactuses?: p.Flex<"div">;
  bestSellers?: p.Flex<"div">;
};

export interface DefaultProductProps {}

function PlasmicProduct__RenderFunc(props: {
  variants: PlasmicProduct__VariantsArgs;
  args: PlasmicProduct__ArgsType;
  overrides: PlasmicProduct__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsabUxTrbG0Cf5V()
  });

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <FooterComponent
            data-plasmic-name={"footerComponent"}
            data-plasmic-override={overrides.footerComponent}
            className={classNames("__wab_instance", sty.footerComponent)}
          />

          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__q0Yny)}>
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__ry80)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__xw4GN)}
                      displayHeight={"100%" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"35%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/blank_project/images/image42.jpeg",
                        fullWidth: 502,
                        fullHeight: 872,
                        aspectRatio: undefined
                      }}
                    />
                  ) : null}

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__pDbz3)}
                  >
                    {true ? (
                      <button
                        className={classNames(
                          projectcss.all,
                          projectcss.button,
                          sty.button__ntMyA
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__e1NdP
                          )}
                        >
                          <BarsIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__noNg1
                            )}
                            role={"img"}
                          />

                          {true ? (
                            <TimesIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__nnWgl
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </div>
                      </button>
                    ) : null}

                    <LogoWhitesvgIcon
                      className={classNames(projectcss.all, sty.svg__vXlY)}
                      role={"img"}
                    />

                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hpee4
                        )}
                      >
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            sty.link__dPbwb
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          {"Store"}
                        </p.PlasmicLink>

                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            sty.link__pn4HE
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          {"About"}
                        </p.PlasmicLink>

                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            sty.link__ewNz
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "Faq"
                            : "Faq"}
                        </p.PlasmicLink>
                      </p.Stack>
                    ) : null}

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__pjGvv)}
                    >
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__hEDC
                        )}
                        component={Link}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tqIvx
                          )}
                        >
                          <Icon5Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg___7B5Q
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vJtum
                            )}
                          >
                            {"0"}
                          </div>
                        </div>
                      </p.PlasmicLink>
                    </p.Stack>
                  </p.Stack>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__ihzw0)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.Stack
                        as={p.PlasmicLink}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__kXaJ
                        )}
                        component={Link}
                        platform={"nextjs"}
                      >
                        <LeftArrowSvgrepoComsvgIcon
                          className={classNames(projectcss.all, sty.svg__lituV)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nhVa
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "see all products"
                            : "see all products"}
                        </div>
                      </p.Stack>
                    ) : null}

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"foreground2"}
                      data-plasmic-override={overrides.foreground2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.foreground2)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.columns__xWvX
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__c2Oea
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img___0OWw3)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/blank_project/images/image43.webp",
                              fullWidth: 900,
                              fullHeight: 900,
                              aspectRatio: undefined
                            }}
                          />
                        </div>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.column__si8Pr
                          )}
                        >
                          <h3
                            data-plasmic-name={"h3"}
                            data-plasmic-override={overrides.h3}
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3
                            )}
                          >
                            {"Donec finibus"}
                          </h3>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___84Y2Z
                            )}
                          >
                            {"big plants"}
                          </div>

                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__h3Vwk
                            )}
                          >
                            {"$100.00"}
                          </h5>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__twqmk
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__sWzb
                              )}
                            >
                              {"Cras molestie faucibus ipsum ut vulputate."}
                            </div>

                            {(
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? true
                                : true
                            ) ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__j5WPw
                                )}
                              >
                                {(
                                  hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobileOnly"
                                  )
                                    ? true
                                    : true
                                ) ? (
                                  <p.Stack
                                    as={p.PlasmicLink}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      sty.link__igZxa
                                    )}
                                    component={Link}
                                    platform={"nextjs"}
                                  >
                                    <Icon6Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__sz6LZ
                                      )}
                                      role={"img"}
                                    />

                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__ddsqq
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "mobileOnly"
                                      )
                                        ? "Discover"
                                        : "Add to cart"}
                                    </div>
                                  </p.Stack>
                                ) : null}
                              </div>
                            ) : null}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </div>
                </div>
              ) : null}
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__t9ExB)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__eNq3Z)}>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7TWMl
                      )}
                    >
                      {true ? (
                        <button
                          className={classNames(
                            projectcss.all,
                            projectcss.button,
                            sty.button__zYFs
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__zbKh3
                            )}
                          >
                            <BarsIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__d13Te
                              )}
                              role={"img"}
                            />

                            {true ? (
                              <TimesIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__eoQ5C
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </div>
                        </button>
                      ) : null}
                      {true ? (
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link___01Uqh
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          <Logo4SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ylOin
                            )}
                            role={"img"}
                          />
                        </p.PlasmicLink>
                      ) : null}
                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : true
                      ) ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__v314Y
                          )}
                        >
                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__h9J7
                            )}
                            component={Link}
                            platform={"nextjs"}
                          >
                            {"Store"}
                          </p.PlasmicLink>

                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__chWlO
                            )}
                            component={Link}
                            platform={"nextjs"}
                          >
                            {"About"}
                          </p.PlasmicLink>

                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__kJpEy
                            )}
                            component={Link}
                            platform={"nextjs"}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Faq"
                              : "Faq"}
                          </p.PlasmicLink>
                        </p.Stack>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__oUeRb
                        )}
                      >
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link___3DCpo
                          )}
                          component={Link}
                          platform={"nextjs"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___3T87
                            )}
                          >
                            <Icon5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dJId
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rfEmU
                              )}
                            >
                              {"0"}
                            </div>
                          </div>
                        </p.PlasmicLink>
                      </p.Stack>
                    </p.Stack>
                  ) : null}
                </div>
              </p.Stack>

              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__b1N2S)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__uhDi
                    )}
                  >
                    {"Top Collections"}
                  </h2>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__fEgfi)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__jkAjM)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__l6YhH)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__s4Rhh
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___71JDj)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: "/plasmic/blank_project/images/image14.jpeg",
                            fullWidth: 1920,
                            fullHeight: 1278,
                            aspectRatio: undefined
                          }}
                        />

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__xi2Pl
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__vn4Lh
                              )}
                            >
                              {"Sale"}
                            </div>
                          </div>
                        ) : null}
                        {true ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rt3O
                            )}
                          >
                            <ShoppingCartIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zT2Ae
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___8D5D7
                              )}
                            >
                              {"Add to cart"}
                            </div>

                            <HeartOIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__k39Y7
                              )}
                              role={"img"}
                            />

                            <ExpandIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__uiop3
                              )}
                              role={"img"}
                            />
                          </p.Stack>
                        ) : null}
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__c1Qq
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ruWd
                            )}
                          >
                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bm2Wf
                              )}
                              role={"img"}
                            />

                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__tIeKr
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__tufb3
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__oeWq
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__tqgLw
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__dk7Up
                                )}
                                role={"img"}
                              />
                            ) : null}

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__fh2D
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__oT6UX
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rPsgg
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vi358
                              )}
                              role={"img"}
                            />
                          </p.Stack>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9Mu0L
                            )}
                          >
                            {"(45 Review)"}
                          </div>
                        </p.Stack>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.freeBox__thT)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mcbAf
                          )}
                        >
                          {"Product"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lGquN
                          )}
                        >
                          {"$65.00"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___9RWty)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__nNo96)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__geQzG
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__noki9)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: "/plasmic/blank_project/images/image15.jpeg",
                            fullWidth: 640,
                            fullHeight: 481,
                            aspectRatio: undefined
                          }}
                        />

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__eRYk
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__llx7W
                              )}
                            >
                              {"Sale"}
                            </div>
                          </div>
                        ) : null}
                        {true ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___3Bdrn
                            )}
                          >
                            <ShoppingCartIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ipC1A
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wsGn
                              )}
                            >
                              {"Add to cart"}
                            </div>

                            <HeartOIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__n1Ix9
                              )}
                              role={"img"}
                            />

                            <ExpandIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hfybo
                              )}
                              role={"img"}
                            />
                          </p.Stack>
                        ) : null}
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cryuj
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__kSykD
                            )}
                          >
                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zvO1F
                              )}
                              role={"img"}
                            />

                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__egWeh
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ceNun
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__kOjzK
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__kyQw
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___0Iofb
                                )}
                                role={"img"}
                              />
                            ) : null}

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___5Nwi3
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vrr9A
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__xfKe
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bvFpi
                              )}
                              role={"img"}
                            />
                          </p.Stack>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ntsRc
                            )}
                          >
                            {"(45 Review)"}
                          </div>
                        </p.Stack>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__as7Co
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___9QTlg
                          )}
                        >
                          {"Product"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wHH6
                          )}
                        >
                          {"$80.00"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__ziqKy)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__oMsZ2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___3KIWf
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__ab20Q)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: "/plasmic/blank_project/images/image16.jpeg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__pScA7
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yXtfk
                              )}
                            >
                              {"Sale"}
                            </div>
                          </div>
                        ) : null}
                        {true ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___2UZbk
                            )}
                          >
                            <ShoppingCartIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__xuycw
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___4OI8C
                              )}
                            >
                              {"Add to cart"}
                            </div>

                            <HeartOIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__tqswY
                              )}
                              role={"img"}
                            />

                            <ExpandIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__cr2SF
                              )}
                              role={"img"}
                            />
                          </p.Stack>
                        ) : null}
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___4Lkme
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__oywGr
                            )}
                          >
                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__kG1Fg
                              )}
                              role={"img"}
                            />

                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__lfdhe
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__wgmVg
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__qCmUt
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__zBu
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__pvoRk
                                )}
                                role={"img"}
                              />
                            ) : null}

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gzOdh
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__jTlJn
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___3Mh3U
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__foyYx
                              )}
                              role={"img"}
                            />
                          </p.Stack>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9Wjv
                            )}
                          >
                            {"(45 Review)"}
                          </div>
                        </p.Stack>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lTdtM
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gsr33
                          )}
                        >
                          {"Product"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__t9YLa
                          )}
                        >
                          {"$40.00"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___3Mgi8)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__veEy)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__pKa68
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__rfy5)}
                          displayHeight={"100%" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: "/plasmic/blank_project/images/image17.jpeg",
                            fullWidth: 640,
                            fullHeight: 427,
                            aspectRatio: undefined
                          }}
                        />

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__odnSg
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__imx0Q
                              )}
                            >
                              {"Sale"}
                            </div>
                          </div>
                        ) : null}
                        {true ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___9T4ZB
                            )}
                          >
                            <ShoppingCartIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__qcXmT
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__f8G3A
                              )}
                            >
                              {"Add to cart"}
                            </div>

                            <HeartOIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__epFdG
                              )}
                              role={"img"}
                            />

                            <ExpandIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vr56U
                              )}
                              role={"img"}
                            />
                          </p.Stack>
                        ) : null}
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dqdBm
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__kjTKa
                            )}
                          >
                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rsYwz
                              )}
                              role={"img"}
                            />

                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__dKbNq
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___7L47
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__iCsIr
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___3Ic5U
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__c4W5
                                )}
                                role={"img"}
                              />
                            ) : null}

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__j5KxD
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zFdKv
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__aeIk3
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__pMkbw
                              )}
                              role={"img"}
                            />
                          </p.Stack>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kqTjT
                            )}
                          >
                            {"(45 Review)"}
                          </div>
                        </p.Stack>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__eEJol
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___11Pqd
                          )}
                        >
                          {"Product"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__brvjh
                          )}
                        >
                          {"$100.00"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__pE5Xv)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__g5Qq)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___8K721
                      )}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__xpIfZ)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__csORr
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wzAjW
                          )}
                        >
                          {"Unlimited Table Collection"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__n1DC
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet consectetur adipisicing elit nemo expedita voluptas culpa sapiente. Lorem ipsum dolor sit amet consectetur adipisicing elit nemo expedita voluptas culpa sapiente. Lorem ipsum dolor sit amet consectetur adipisicing elit nemo expedita voluptas culpa sapiente."
                          }
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vJNxM
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yqeM2
                            )}
                          >
                            {"Starting from"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__klx4Z
                            )}
                          >
                            {" $399"}
                          </div>
                        </div>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__euqK1
                          )}
                        >
                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__beJt8
                            )}
                            component={Link}
                            platform={"nextjs"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__gBh9J
                              )}
                            >
                              {"View More"}
                            </div>
                          </p.PlasmicLink>
                        </p.Stack>
                      </p.Stack>
                    </div>
                  </div>
                </div>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__aKsno)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nLHn
                    )}
                  >
                    {"Featured Products"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___5Ctut)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column___82EG)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__v0TOd)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__oxmCj
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__trJdT)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: "/plasmic/blank_project/images/image19.jpeg",
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__m8Js7
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__aoQB
                              )}
                            >
                              {"Sale"}
                            </div>
                          </div>
                        ) : null}
                        {true ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lxDge
                            )}
                          >
                            <ShoppingCartIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__xd0
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qrWca
                              )}
                            >
                              {"Add to cart"}
                            </div>

                            <HeartOIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__usXj8
                              )}
                              role={"img"}
                            />

                            <ExpandIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__x1GHh
                              )}
                              role={"img"}
                            />
                          </p.Stack>
                        ) : null}
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___37UBt
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__gnpTa
                            )}
                          >
                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__uuJja
                              )}
                              role={"img"}
                            />

                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___0Y0Wv
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ixRlP
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__iT8C
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__tcYlb
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___7VeG3
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__vbNr
                                )}
                                role={"img"}
                              />
                            ) : null}

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__kagF
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___7NqG8
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dxIN
                              )}
                              role={"img"}
                            />
                          </p.Stack>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___5S2Fn
                            )}
                          >
                            {"(12 Review)"}
                          </div>
                        </p.Stack>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__prohV
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6Dkjd
                          )}
                        >
                          {"Designed Sofa"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__flS42
                          )}
                        >
                          {"$160.00"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__xs7Ea)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___2Mp2J
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__h9GS
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__fSPk)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: "/plasmic/blank_project/images/image20.jpeg",
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__y4EWi
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wjRqM
                              )}
                            >
                              {"Sale"}
                            </div>
                          </div>
                        ) : null}
                        {true ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___97Iga
                            )}
                          >
                            <ShoppingCartIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__oRrfp
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yEcgL
                              )}
                            >
                              {"Add to cart"}
                            </div>

                            <HeartOIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__jXxIx
                              )}
                              role={"img"}
                            />

                            <ExpandIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ik8Sw
                              )}
                              role={"img"}
                            />
                          </p.Stack>
                        ) : null}
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ysRzk
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__tfE9C
                            )}
                          >
                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__kmdHe
                              )}
                              role={"img"}
                            />

                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__mwQIp
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__rj67P
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__xU3Dl
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__rrkPn
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___0IOYe
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__f2XU
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ltZeS
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__dGuoy
                                )}
                                role={"img"}
                              />
                            ) : null}

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__oyHw
                              )}
                              role={"img"}
                            />
                          </p.Stack>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cscXd
                            )}
                          >
                            {"(45 Review)"}
                          </div>
                        </p.Stack>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__oezg6
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__baWyz
                          )}
                        >
                          {"Dining Table"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bCdxD
                          )}
                        >
                          {"$200.00"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__mwq4U)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__a5QiN)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__j6MT7
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__akuTz)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: "/plasmic/blank_project/images/image21.jpeg",
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yfAkb
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__szAeo
                              )}
                            >
                              {"Sale"}
                            </div>
                          </div>
                        ) : null}
                        {true ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rgZjy
                            )}
                          >
                            <ShoppingCartIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zpt0N
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__y2NyI
                              )}
                            >
                              {"Add to cart"}
                            </div>

                            <HeartOIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dv66L
                              )}
                              role={"img"}
                            />

                            <ExpandIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__qaRf
                              )}
                              role={"img"}
                            />
                          </p.Stack>
                        ) : null}
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ccJef
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cGjQo
                            )}
                          >
                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__khogK
                              )}
                              role={"img"}
                            />

                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__lfb7A
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___6HSnv
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___8Bfuq
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__hneMb
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__h0RRf
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__oAQlZ
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__nbiSe
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__vdOz
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__oDgp
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </p.Stack>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jFn5N
                            )}
                          >
                            {"(23 Review)"}
                          </div>
                        </p.Stack>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__md0Ju
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__q4NHb
                          )}
                        >
                          {"Chair and Table"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__r68Fs
                          )}
                        >
                          {"$100.00"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__seo3C)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__gnGnh)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aS9Kv
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__fbx8Q)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: "/plasmic/blank_project/images/image22.jpeg",
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__uj5Oz
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wuFut
                              )}
                            >
                              {"Sale"}
                            </div>
                          </div>
                        ) : null}
                        {true ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__kCoYd
                            )}
                          >
                            <ShoppingCartIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__qs437
                              )}
                              role={"img"}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jOv4K
                              )}
                            >
                              {"Add to cart"}
                            </div>

                            <HeartOIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__mm5Na
                              )}
                              role={"img"}
                            />

                            <ExpandIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__aFvFh
                              )}
                              role={"img"}
                            />
                          </p.Stack>
                        ) : null}
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wtNs0
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__dlYKo
                            )}
                          >
                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___5TAM
                              )}
                              role={"img"}
                            />

                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__swU5Y
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ktcDn
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__rsj3
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__uy4Bx
                                )}
                                role={"img"}
                              />
                            ) : null}
                            {true ? (
                              <StarIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__tkqD7
                                )}
                                role={"img"}
                              />
                            ) : null}

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___2IMlJ
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__e5OAa
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__exeV
                              )}
                              role={"img"}
                            />

                            <StarIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__kKmq
                              )}
                              role={"img"}
                            />
                          </p.Stack>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__if3A
                            )}
                          >
                            {"(35 Review)"}
                          </div>
                        </p.Stack>
                      ) : null}

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__p49U
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tQqGm
                          )}
                        >
                          {"Modern Arm Chair"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mdk6Z
                          )}
                        >
                          {"$299.00"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__fHukn)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mj8N3
                    )}
                  >
                    {"Latest Blog"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__fCd3K)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__z5Tse)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__iGaql)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__b0Sf9
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__zwUbi)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: "/plasmic/blank_project/images/image23.jpeg",
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__fUuho
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kKpfH
                          )}
                        >
                          {"Why Brands are Looking at Local Language"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yGp8T
                          )}
                        >
                          {"By Robert Norby / 18th March 2018"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8Yn5R
                          )}
                        >
                          {
                            "Nemo Enim Ipsam Voluptatem Quia Voluptas Sit Aspernatur Aut Odit Aut Fugit, Sed Quia Consequuntur Magni Dolores Eos Qui Ratione Voluptatem Sequi Nesciunt...."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column___1Mndk)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__mpIej)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ftbrd
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__w7AV)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: "/plasmic/blank_project/images/image24.jpeg",
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__uSa2V
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nE2Ml
                          )}
                        >
                          {"Why Brands are Looking at Local Language"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tMtqR
                          )}
                        >
                          {"By Robert Norby / 18th March 2018"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eopWb
                          )}
                        >
                          {
                            "Nemo Enim Ipsam Voluptatem Quia Voluptas Sit Aspernatur Aut Odit Aut Fugit, Sed Quia Consequuntur Magni Dolores Eos Qui Ratione Voluptatem Sequi Nesciunt...."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__hP66O)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5Vkae
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cCmHj
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___5IHQt)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"none" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"100%" as const}
                          src={{
                            src: "/plasmic/blank_project/images/image25.jpeg",
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___5Ti69
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7BL7A
                          )}
                        >
                          {"Why Brands are Looking at Local Language"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__n6OzD
                          )}
                        >
                          {"By Robert Norby / 18th March 2018"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jioK1
                          )}
                        >
                          {
                            "Nemo Enim Ipsam Voluptatem Quia Voluptas Sit Aspernatur Aut Odit Aut Fugit, Sed Quia Consequuntur Magni Dolores Eos Qui Ratione Voluptatem Sequi Nesciunt...."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___67R9U)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___9JTmG)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"90px" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image26.png",
                      fullWidth: 90,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__a9Bx)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"91px" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image27.png",
                      fullWidth: 91,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__b4YoU)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"98px" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image28.png",
                      fullWidth: 98,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__brARr)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"124px" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image29.png",
                      fullWidth: 124,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ypS)}
                    displayHeight={"60px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"125px" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image30.png",
                      fullWidth: 125,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>
              ) : null}
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___0DOYe)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fuSr2)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dGeGp)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__xwozi)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/blank_project/images/image31.webp",
                          fullWidth: 720,
                          fullHeight: 525,
                          aspectRatio: undefined
                        }}
                      />
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__mQlUa)}
                    >
                      <h1
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1___7OcGk
                        )}
                      >
                        {"A new homeinterior for summer"}
                      </h1>

                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__tmg5O
                        )}
                      >
                        {"from $149.99"}
                      </h2>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yRgUj
                          )}
                        >
                          {true ? (
                            <p.PlasmicLink
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                sty.link__apTg
                              )}
                              component={Link}
                              platform={"nextjs"}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__cvceh
                                )}
                              >
                                {"Discover"}
                              </div>

                              <ButtonArrowIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__aMqGq
                                )}
                                role={"img"}
                              />
                            </p.PlasmicLink>
                          ) : null}
                        </div>
                      ) : null}
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__qvgvv)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__iPlX2)}
                    >
                      {true ? (
                        <button
                          className={classNames(
                            projectcss.all,
                            projectcss.button,
                            sty.button__lIkFy
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___01CGw
                            )}
                          >
                            <BarsIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__cauge
                              )}
                              role={"img"}
                            />

                            {true ? (
                              <TimesIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___1ID43
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </div>
                        </button>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__s7IJq
                          )}
                        >
                          <LogoWhitesvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__xVddR
                            )}
                            role={"img"}
                          />

                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__yUzhd
                            )}
                            component={Link}
                            platform={"nextjs"}
                          >
                            {"Store"}
                          </p.PlasmicLink>

                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__cxYbo
                            )}
                            component={Link}
                            platform={"nextjs"}
                          >
                            {"About"}
                          </p.PlasmicLink>

                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__r4UJd
                            )}
                            component={Link}
                            platform={"nextjs"}
                          >
                            {"Faq"}
                          </p.PlasmicLink>
                        </p.Stack>
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__oIKz6
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sdS0
                          )}
                        >
                          {
                            "© Company. All rights reserved. This site proudly built with "
                          }
                        </div>

                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            sty.link__fJ6Gt
                          )}
                          component={Link}
                          href={"https://www.plasmic.app/" as const}
                          platform={"nextjs"}
                        >
                          {"Plasmic"}
                        </p.PlasmicLink>
                      </div>
                    </p.Stack>
                  </p.Stack>
                </div>
              ) : null}
            </div>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"bigPlants"}
              data-plasmic-override={overrides.bigPlants}
              hasGap={true}
              className={classNames(projectcss.all, sty.bigPlants)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__caSw)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___79LI9
                    )}
                  >
                    {"Big plants"}
                  </h2>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__wySlA)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___6G6F)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__pEuUf)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image33.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1KuUg
                      )}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__bwLum)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__iBUiX)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__bv9Az
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Donec finibus"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oboGx
                      )}
                    >
                      {"bigplants"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___5Htyf
                      )}
                    >
                      {"$100.00"}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__eV66A)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__srVcf)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image34.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xvXmV)}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__q9S)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__o9WFn)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__ssx6P
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Nulla suscipit"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vyHz
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__ythvN
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__afres)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__uZ9Kg)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image35.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__hAac)}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__rla69)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__bf774)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__gxmPy
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Sed consectetur"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vMSyQ
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__yroq7
                      )}
                    >
                      {"$18.40 "}
                    </h5>
                  </div>

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__w2Jbg)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image36.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__n4D31)}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__tAmru)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__zoIbV)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__r8OJ
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Vestibulum eget"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yuKBc
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__crhTh
                      )}
                    >
                      {"$220.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"cactuses"}
              data-plasmic-override={overrides.cactuses}
              hasGap={true}
              className={classNames(projectcss.all, sty.cactuses)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jvP4W)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__yHcmV
                    )}
                  >
                    {"Cactuses"}
                  </h2>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___2624H)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__q9SRn)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__gygFs)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image37.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__wbyqB)}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg___8IBs)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__cNdWj)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__gzA6R
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Cras molestie"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cqnh
                      )}
                    >
                      {"cactuses "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__ignP8
                      )}
                    >
                      {"$24.99"}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__ax49T)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__dakLj)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image38.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rhrGi)}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__qE0Kf)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__uogml)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__tr44B
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Curabitur eu tempor"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nhfSt
                      )}
                    >
                      {"Cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__pwC4N
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__rXtj2)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xtuHs)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image39.webp",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bz2B)}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__s5Oly)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox___42QSd)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__vc7Lz
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Fusce sagittis"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q5T5N
                      )}
                    >
                      {"Fusce sagittis"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__akiJf
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___9KnAm)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__jYqYq)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image40.webp",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5Wos2
                      )}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__fKnZv)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__xJskb)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__pyoNr
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Integer porta"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nnd4
                      )}
                    >
                      {"Cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__c9Cpl
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}

          <p.Stack
            as={"div"}
            data-plasmic-name={"bestSellers"}
            data-plasmic-override={overrides.bestSellers}
            hasGap={true}
            className={classNames(projectcss.all, sty.bestSellers)}
          >
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__anG3P)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__zsPP
                  )}
                >
                  {"Related"}
                </h2>
              </p.Stack>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__tkbbw)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__gKx1)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__kk4D7)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image44.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__n14R2)}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__utEy9)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__mgS8I)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__zhikb
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Nulla suscipit "}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mjul7
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__cdWhJ
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__dz6Eq)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__oCatT)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image45.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__j4HP)}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__ow4C)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__fDapQ)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__cxmCe
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Integer porta"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9LhEq
                      )}
                    >
                      {"cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__tJ2Rj
                      )}
                    >
                      {"$99.00 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__nbZxb)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__rJdE)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image46.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__dymhw)}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__cH8Tl)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__rByEt)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__yqRa
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Vestibulum eget"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9MBmk
                      )}
                    >
                      {"bigplants "}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__xWn4
                      )}
                    >
                      {"$220.00 "}
                    </h5>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__s0FDp)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__jyt)}
                    displayHeight={"270px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"100%" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/blank_project/images/image47.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vTkHg)}
                    >
                      <Icon6Icon
                        className={classNames(projectcss.all, sty.svg__a9Wm9)}
                        role={"img"}
                      />
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.freeBox__p8VI)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__wkIs9
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Fusce sagittis"}
                    </p.PlasmicLink>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fmGe8
                      )}
                    >
                      {"cactuses"}
                    </div>

                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__hBxii
                      )}
                    >
                      {"$400.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            ) : null}
          </p.Stack>

          <div className={classNames(projectcss.all, sty.freeBox__khEi)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___6CIrR)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__etmkv)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__mfXw7)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/blank_project/images/image31.webp",
                    fullWidth: 720,
                    fullHeight: 525,
                    aspectRatio: undefined
                  }}
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pdwOb)}
              >
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__tqggt
                  )}
                >
                  {"A new homeinterior for summer"}
                </h1>

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__b12Oc
                  )}
                >
                  {"from $149.99"}
                </h2>

                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__foRQk)}
                  >
                    {true ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__pQLk
                        )}
                        component={Link}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rU9U
                          )}
                        >
                          {"Discover"}
                        </div>

                        <ButtonArrowIcon
                          className={classNames(projectcss.all, sty.svg__ziDff)}
                          role={"img"}
                        />
                      </p.PlasmicLink>
                    ) : null}
                  </div>
                ) : null}
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___8KFJe)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__knG2Z)}
              >
                {true ? (
                  <button
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      sty.button___1I3We
                    )}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__hLlDz)}
                    >
                      <BarsIcon
                        className={classNames(projectcss.all, sty.svg__ph4Tk)}
                        role={"img"}
                      />

                      {true ? (
                        <TimesIcon
                          className={classNames(projectcss.all, sty.svg__zpDqb)}
                          role={"img"}
                        />
                      ) : null}
                    </div>
                  </button>
                ) : null}
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__qrrlK)}
                  >
                    <LogoWhitesvgIcon
                      className={classNames(projectcss.all, sty.svg___7BpCq)}
                      role={"img"}
                    />

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__a8Rg0
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Store"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__xwg4U
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"About"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__bApFs
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Faq"}
                    </p.PlasmicLink>
                  </p.Stack>
                ) : null}

                <div className={classNames(projectcss.all, sty.freeBox__uAvfm)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gVzti
                    )}
                  >
                    {
                      "© Company. All rights reserved. This site proudly built with "
                    }
                  </div>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__asdDk
                    )}
                    component={Link}
                    href={"https://www.plasmic.app/" as const}
                    platform={"nextjs"}
                  >
                    {"Plasmic"}
                  </p.PlasmicLink>
                </div>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "footerComponent",
    "foreground2",
    "h3",
    "header",
    "bigPlants",
    "cactuses",
    "bestSellers"
  ],
  footerComponent: ["footerComponent"],
  foreground2: ["foreground2", "h3"],
  h3: ["h3"],
  header: ["header"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  bestSellers: ["bestSellers"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  footerComponent: typeof FooterComponent;
  foreground2: "div";
  h3: "h3";
  header: "div";
  bigPlants: "div";
  cactuses: "div";
  bestSellers: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicProduct__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicProduct__VariantsArgs;
    args?: PlasmicProduct__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicProduct__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicProduct__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicProduct__ArgProps,
      internalVariantPropNames: PlasmicProduct__VariantProps
    });

    return PlasmicProduct__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicProduct";
  } else {
    func.displayName = `PlasmicProduct.${nodeName}`;
  }
  return func;
}

export const PlasmicProduct = Object.assign(
  // Top-level PlasmicProduct renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    footerComponent: makeNodeComponent("footerComponent"),
    foreground2: makeNodeComponent("foreground2"),
    h3: makeNodeComponent("h3"),
    header: makeNodeComponent("header"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    bestSellers: makeNodeComponent("bestSellers"),

    // Metadata about props expected for PlasmicProduct
    internalVariantProps: PlasmicProduct__VariantProps,
    internalArgProps: PlasmicProduct__ArgProps
  }
);

export default PlasmicProduct;
/* prettier-ignore-end */
