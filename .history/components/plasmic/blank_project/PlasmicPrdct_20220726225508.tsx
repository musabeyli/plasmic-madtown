// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wA73ZswqroE6r1m1xaxGJ1
// Component: ctEGS_j_Qt
import React, { useState } from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web";
import MadisonopolyHeaderFinal from "../../MadisonopolyHeaderFinal"; // plasmic-import: zLYGck-fye5/component
import Slider from "react-slick"; // plasmic-import: HOQUyOpClJ/codeComponent
import Select from "../../Select"; // plasmic-import: eL6LYOdI6RC/component
import Select__Option from "../../Select__Option"; // plasmic-import: ioSFR3lRmqr/component
import FooterComponent from "../../FooterComponent"; // plasmic-import: Mfi3gMBJIGb/component
import { GalleriesModel } from "./ecommerce_image_slider/models/Gallery";
import { useScreenVariants as useScreenVariantsabUxTrbG0Cf5V } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: AbUXTrbG0Cf5V/globalVariant
import GalleryDetail from "../../ecommerce_image_slider/components/GalleryDetail";
import {
  Center,
  Heading,
  HStack,
  Text,
  VStack,
  Box,
  createIcon,
} from "@chakra-ui/react";
import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: wA73ZswqroE6r1m1xaxGJ1/projectcss
import sty from "./PlasmicPrdct.module.css"; // plasmic-import: ctEGS_j_Qt/css
import ImageGallery from "react-image-gallery";
import "react-image-gallery/styles/css/image-gallery.css";

import ShoppingCartIcon from "./icons/PlasmicIcon__ShoppingCart"; // plasmic-import: T3tWtDwVAV/icon
import CheckoutButton from "../../../pages/checkout";
import ImageSlider from "../../ImageSlider.js";
import { SliderData } from "../../SliderData.js";
import { loadStripe } from "@stripe/stripe-js";
import { fetchPostJSON } from "../../../utils/api-helpers";
import getStripe from "../../../utils/get-stripejs";
import { fakeDataItems } from "../../ProductImages";
import { TikTok } from "react-tiktok";
import {
  FaGrinTears,
  FaComments,
  FaUniversity,
  FaShippingFast,
  FaInstagram,
  FaTiktok,
  FaTwitter,
} from "react-icons/fa";
import Carousel from "react-elastic-carousel";
import Image from "next/image";

loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY || "");

export type PlasmicPrdct__VariantMembers = {};

export type PlasmicPrdct__VariantsArgs = {};
type VariantPropType = keyof PlasmicPrdct__VariantsArgs;
export const PlasmicPrdct__VariantProps = new Array<VariantPropType>();

export type PlasmicPrdct__ArgsType = {};
type ArgPropType = keyof PlasmicPrdct__ArgsType;
export const PlasmicPrdct__ArgProps = new Array<ArgPropType>();

export type PlasmicPrdct__OverridesType = {
  root?: p.Flex<"div">;
  madisonopolyHeaderFinal?: p.Flex<typeof MadisonopolyHeaderFinal>;
  svg?: p.Flex<"svg">;
  columns?: p.Flex<"div">;
  ul?: p.Flex<"ul">;
  select?: p.Flex<typeof Select>;
  footerComponent?: p.Flex<typeof FooterComponent>;
};

export interface DefaultPrdctProps {}

const ballStyle = {
  marginRight: "0.5em",
  marginTop: "50px",
};

function PlasmicPrdct__RenderFunc(props: {
  variants: PlasmicPrdct__VariantsArgs;
  args: PlasmicPrdct__ArgsType;
  overrides: PlasmicPrdct__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsabUxTrbG0Cf5V(),
  });
  const navigateCheckout = (_event) => {
    router.push({
      pathname: "/checkout",
      query: { quantity: "2" },
    });
  };
  const [selectedValue, setSelectedValue] = useState("1");
  const [mainImgString, setMainImgString] = useState(
    "/plasmic/blank_project/images/gameboxBoardDetailedpng.png"
  );
  const handleChange = (e) => {
    console.log("Fruit Selected!!", e);
    if (typeof window !== "undefined") {
      localStorage.setItem("quantity", e);
    }
    setSelectedValue(e);
  };

  const state = {
    showVideo: {},
    showGalleryPlayButton: true,
    showVide: {},
    showGalleryFullscreenButton: true,
  };

  const items = [
    {
      mediatype: "img",
      srcurl: "/plasmic/blank_project/images/gameboxBoardDetailedpng.png",
      thumbnail: "/plasmic/blank_project/images/gameboxBoardDetailedpng.png",
      altTitle: "item #1",
    },
    {
      mediatype: "video",
      srcurl: "https://s-ukraini.s3.amazonaws.com/madisonopoly_insta_1.mp4",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_insta_thumbnail_2.jpg",
      altTitle: "item #1",
    },
    {
      mediatype: "img",
      srcurl:
        "/plasmic/blank_project/images/website_images/madisonopoly_front_blue.jpg",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_front_blue.jpg",
      altTitle: "item #1",
    },
    {
      mediatype: "video",
      srcurl: "https://s-ukraini.s3.amazonaws.com/madisonopoly_insta_2.mp4",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_insta_thumbnail_1.jpg",
      altTitle: "item #1",
    },
    {
      mediatype: "img",
      srcurl:
        "/plasmic/blank_project/images/website_images/madisonopoly_money.png",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_money.png",
      altTitle: "item #1",
    },
    {
      mediatype: "video",
      srcurl: "https://s-ukraini.s3.amazonaws.com/Madisonopoly_tiktok_1.mp4",
      thumbnail:
        "https://p16-sign.tiktokcdn-us.com/obj/tos-useast5-p-0068-tx/c2779fb4c6744d41952f1f20f2b6a31e_1658439569?x-expires=1658865600&x-signature=AVeGynYBSPhl%2FQusc6sZ%2FHntTSs%3D&s=AWEME_DETAIL&se=false&sh=&sc=dynamic_cover&l=20220726140005B4A485FA63801E13E00B",
      altTitle: "item #1",
    },
    {
      mediatype: "img",
      srcurl:
        "/plasmic/blank_project/images/website_images/madisonopoly_front_3.jpg",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_front_3.jpg",
      altTitle: "item #1",
    },
    {
      mediatype: "video",
      srcurl: "https://s-ukraini.s3.amazonaws.com/Madisonopoly_tiktok_2.mp4",
      thumbnail:
        "https://p19-sign.tiktokcdn-us.com/obj/tos-useast5-p-0068-tx/8128c94ad40848f58b3a1d40bb49177d_1658007055?x-expires=1658865600&x-signature=alCQf5eP8m35IROuvSVRStqFYoU%3D&s=AWEME_DETAIL&se=false&sh=&sc=dynamic_cover&l=20220726140048A0468A2E291F5D132A2C",
      altTitle: "item #1",
    },

    {
      mediatype: "img",
      srcurl:
        "/plasmic/blank_project/images/website_images/madisonopoly_front_cards.png",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_front_cards.png",
      altTitle: "item #1",
    },
    {
      mediatype: "img",
      srcurl:
        "/plasmic/blank_project/images/website_images/madisonopoly_front_4.jpg",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_front_4.jpg",
      altTitle: "item #1",
    },
    {
      mediatype: "img",
      srcurl:
        "/plasmic/blank_project/images/website_images/madisonopoly_front_5.jpg",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_front_5.jpg",
      altTitle: "item #1",
    },
    {
      mediatype: "img",
      srcurl:
        "/plasmic/blank_project/images/website_images/madisonopoly_closeup_6.jpg",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_closeup_6.jpg",
      altTitle: "item #1",
    },
    {
      mediatype: "img",
      srcurl:
        "/plasmic/blank_project/images/website_images/madisonopoly_closeup_7.jpg",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_closeup_7.jpg",
      altTitle: "item #1",
    },
    {
      mediatype: "img",
      srcurl:
        "/plasmic/blank_project/images/website_images/madisonopoly_closeup_8.jpg",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_closeup_8.jpg",
      altTitle: "item #1",
    },
    {
      mediatype: "img",
      srcurl:
        "/plasmic/blank_project/images/website_images/madisonopoly_closeup_9.jpg",
      thumbnail:
        "/plasmic/blank_project/images/website_images/madisonopoly_closeup_9.jpg",
      altTitle: "item #1",
    },
  ];

  const images = [
    {
      original:
        "/plasmic/blank_project/images/website_images/gamebox_back_cover.JPG",
      thumbnail:
        "/plasmic/blank_project/images/website_images/gamebox_back_cover.JPG",
    },
    {
      original:
        "/plasmic/blank_project/images/website_images/gamebox_cover.JPG",
      thumbnail:
        "/plasmic/blank_project/images/website_images/gamebox_cover.JPG",
    },
    {
      original:
        "/plasmic/blank_project/images/website_images/gamebox_gameplay_cards.jpg",
      thumbnail:
        "/plasmic/blank_project/images/website_images/gamebox_gameplay_cards.jpg",
    },
    {
      original:
        "/plasmic/blank_project/images/website_images/gamebox_gameplay_side.jpg",
      thumbnail:
        "/plasmic/blank_project/images/website_images/gamebox_gameplay_side.jpg",
    },
    // {
    //   thumbnail:
    //     "/plasmic/blank_project/images/website_images/tiktok_image.png",
    //   original: "/plasmic/blank_project/images/website_images/tiktok_image.png",
    //   embedUrl: "https://www.tiktok.com/embed/7121119118769622318",
    //   description: "Madisonopoly Tiktok Video",
    //   renderItem: _renderVideo.bind(),
    // },
  ];

  const [loading, setLoading] = useState(false);

  const iframe_container = {
    left: 0,
    width: "100%",
    height: 500,
    position: "relative",
  };

  const iframe = {
    top: 0,
    left: 0,
    width: "100%",
    height: "100%",
    position: "relative",
    border: 0,
  };

  function _renderVideo(item) {
    return (
      <div>
        <div className={classNames(projectcss.all, sty.row_container)}>
          <div className={classNames(projectcss.all, sty.first_row)}>
            <p>Madisonopoly on Tiktok</p>
          </div>
          <HStack>
            <iframe
              src="https://www.tiktok.com/embed/7120005683860311339"
              className={classNames(projectcss.all, sty.second_row)}
            ></iframe>
            <iframe
              src="https://www.tiktok.com/embed/7121085878209989930"
              className={classNames(projectcss.all, sty.second_row)}
            ></iframe>
            <iframe
              src="https://www.tiktok.com/embed/7121119118769622318"
              className={classNames(projectcss.all, sty.second_row)}
            ></iframe>
            {/* <iframe
              src="https://www.tiktok.com/embed7120346132080790830"
              className={classNames(projectcss.all, sty.second_row)}
            ></iframe> */}
            <iframe
              src="https://www.tiktok.com/embed/7122232365149130030"
              className={classNames(projectcss.all, sty.second_row)}
            ></iframe>
          </HStack>
        </div>
        {/* <div className="video-wrapper">
          <div className={iframe_container} bg="red">
            <iframe
              src="https://www.tiktok.com/embed/7072819797184171310"
              className={iframe}
              allowfullscreen
              scrolling="no"
              allow="encrypted-media;"
            ></iframe>
          </div>
        </div> */}
      </div>
    );
  }
  // export const customSVG = createIcon({
  //   displayName: 'CustomIcon',
  //   viewBox: '0 0 200 200'
  //   path: (

  //   )
  // })

  function _toggleShowVideo(url) {
    state.showVideo[url] = !Boolean(state.showVideo[url]);
    state.showVideo = state.showVideo;
    // setState({
    //   showVideo: state.showVideo,
    // });
  }

  const handleSubmit: React.FormEventHandler<HTMLFormElement> = async (e) => {
    e.preventDefault();
    setLoading(true);
    // Create a Checkout Session.
    const response = await fetchPostJSON("/api/checkout_sessions", {
      amount: selectedValue,
    });

    if (response.statusCode === 500) {
      console.error(response.message);
      return;
    }

    // Redirect to Checkout.
    const stripe = await getStripe();
    const { error } = await stripe!.redirectToCheckout({
      // Make the id field from the Checkout Session creation API response
      // available to this file, so you can provide it as parameter here
      // instead of the {{CHECKOUT_SESSION_ID}} placeholder.
      sessionId: response.id,
    });
    // If `redirectToCheckout` fails due to a browser or network
    // error, display the localized error message to your customer
    // using `error.message`.
    console.warn(error.message);
    setLoading(false);
  };

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <MadisonopolyHeaderFinal
            data-plasmic-name={"madisonopolyHeaderFinal"}
            data-plasmic-override={overrides.madisonopolyHeaderFinal}
            className={classNames(
              "__wab_instance",
              sty.madisonopolyHeaderFinal
            )}
          />

          <div className={classNames(projectcss.all, sty.freeBox__mDtZy)}>
            <div
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              className={classNames(projectcss.all, sty.columns)}
            >
              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : false
              ) ? (
                <Heading textAlign="center">{"Madisonopoly"}</Heading>
              ) : null}
              <div className={classNames(projectcss.all, sty.column__gRxnh)}>
                <Carousel>
                  {items.map((item) => (
                    <Box
                      boxSize={"full"}
                      as={item.mediatype}
                      onClick={() => setMainImgString(item.srcurl)}
                      controls
                      src={item.srcurl}
                      poster={item.thumbnail}
                      alt="Big Buck Bunny"
                      objectFit="contain"
                      sx={{
                        aspectRatio: "9/9",
                      }}
                    />
                  ))}
                </Carousel>
                8.33k → 6.39k 76.69%
                <svg
                  data-name="Layer 1"
                  xmlns="http://www.w3.org/2000/svg"
                  width="921"
                  height="647.736"
                >
                  <path
                    d="M727.8 646.56a50.167 50.167 0 0 1-13.544-1.872l-183.025-48.99.538-1.925 183.026 48.99a48.161 48.161 0 0 0 13.006 1.796c21.539 0 40.642-12.48 46.456-33.214l130.286-464.618h-.001l.284-1.011a48.29 48.29 0 0 0-33.43-59.413L577.204 3.807a48.29 48.29 0 0 0-59.46 33.417l-10.223 36.46-1.925-.54 10.221-36.46a50.29 50.29 0 0 1 61.927-34.802l294.193 82.495a50.291 50.291 0 0 1 35.062 60.962l.009.002-.27.963-130.555 465.581c-6.055 21.593-25.95 34.674-48.382 34.674Z"
                    fill="#2f2e41"
                  />
                  <path
                    fill="#6c63ff"
                    d="m518.96 84.066 3.35.94 10.31 2.89 1.08-3.86-3.86-1.08 3.39-12.09 8.15-7.08 2.17 23.02-6-1.69-1.08 3.86 15.4 4.32 1.08-3.86-3.27-.91-3.14-29.22 16-13.91 4.49 1.26 1.08-3.86-15.41-4.32-1.08 3.86 5.08 1.42-20.35 15.99 5.64-20.11 3.86 1.08 1.08-3.86-15.41-4.32-1.08 3.86 5.78 1.62-12.15 43.32-5.78-1.62-.15.52-.62 2.24 1.44 1.59zM543.75 120.566a116.744 116.744 0 0 0-11.25 5.61c-.67.38-1.34.77-2 1.16v-12.37a46.801 46.801 0 0 0-1.87-13.15c.58-.36 1.17-.75 1.75-1.14.53-.35 1.07-.71 1.6-1.07a134.736 134.736 0 0 0 11.77 20.96ZM727.027 611.842l-4.485-1.258-1.08 3.851 15.406 4.32 1.08-3.851-5.074-1.423 20.344-15.996-5.642 20.119-3.851-1.08-1.08 3.851 15.406 4.32 1.08-3.851-5.778-1.62 12.15-43.329 5.778 1.62 1.08-3.851-15.406-4.32-1.08 3.851 3.851 1.08-3.391 12.094-8.146 7.08-2.165-23.016 5.999 1.682 1.08-3.851-15.405-4.32-1.08 3.851 3.273.918 3.142 29.217-16.006 13.912zM745.815 536.67a110.091 110.091 0 0 0 20.46-11.498 169.049 169.049 0 0 0 11.779 20.959 125.777 125.777 0 0 0-20.46 11.498 135.224 135.224 0 0 0-11.779-20.959Z"
                  />
                  <path
                    d="M610.897 328.462s-5.059 32.854-6.561 34.51 10.5 40.333 10.5 40.333l38.488-22.441s7.489-41.52 9.955-42.906-52.382-9.496-52.382-9.496Z"
                    fill="#ffb8b8"
                  />
                  <path
                    d="M610.897 328.462s-5.059 32.854-6.561 34.51 10.5 40.333 10.5 40.333l38.488-22.441s7.489-41.52 9.955-42.906-52.382-9.496-52.382-9.496Z"
                    opacity=".1"
                  />
                  <circle cx="640.674" cy="322.272" r="38" fill="#ffb8b8" />
                  <path
                    d="m624.204 381.006-3.311-3.005-14.885-21.185s-1.708-1.124-3.328 4.653l-1.62 5.777-13.984 5.426-30.943 132.57 82.806 23.22 34.101-132.723-16.017-16.954-1.774-8.18-24.728 10.096Z"
                    fill="#fff"
                  />
                  <path
                    d="m530.5 518.826 2 .56 128.96 36.16 43.12-142.65s-10.2-8.06-18.18-9.26c0 0-13.4-15.18-19.17-16.8-5.78-1.62-12.17-15.87-12.17-15.87s-6.75 24.07-18.35 39.51-31.8 68.98-31.8 68.98l-5.7-98.19 6.4-24.69a45.464 45.464 0 0 0-10.06 8.09c-4.51 4.96-16.02 9-16.02 9s-30.32 8.12-35.68 8.7c-5.35.57-7.82 1.96-7.82 1.96l-3.53 24.29-2 13.76Z"
                    fill="#2f2e41"
                  />
                  <path
                    d="M548.1 463.526c-1.2 7.97-13.54 40.86-13.54 40.86l-2.06 2.07-2 2.01v-121.81a5.618 5.618 0 0 1 2-1.39 13.72 13.72 0 0 1 3.53-.94l3.86 1.08s9.41 70.14 8.21 78.12Z"
                    fill="#2f2e41"
                  />
                  <path
                    d="M635.943 505.811s18.926-34.159 33.251-25.987-8.64 30.811-8.64 30.811ZM577.361 492.5s-36.318-11.223-37.128-8.335-10.755 19.833-7.866 20.643 25.304 6.057 25.034 7.02 10.745 6.129 10.745 6.129Z"
                    fill="#ffb8b8"
                  />
                  <path
                    fill="#6c63ff"
                    d="m648.165 384.489-23.115.909-4.814-1.35-19.273-12.795-6.383 19.102 24.306-1.493 4.814 1.35 19.986 13.913 4.479-19.636z"
                  />
                  <path
                    fill="#2f2e41"
                    d="m586.05 528.176-3.55 7.56-51-14-1-2.91v-16.03l2 .78 2.06.81 51.49 23.79z"
                  />
                  <path
                    d="M587.953 495.47s-11.977-5.436-12.247-4.473-16.343 28.651-12.492 29.731 17.484 8.019 17.484 8.019Z"
                    fill="#fff"
                  />
                  <path
                    d="m697.84 411.002 6.74 1.89s3.852 1.08 4.157 7.397 5.533 35.825 3.068 37.21-3.16.153-1.773 2.619 2.618 1.773 1.115 3.429-4.951 54.694-16.128 72.331-14.57 26.033-18.422 24.953l-99.83-27.994s4.446-39.257 8.567-39.14 71.639 14.895 71.639 14.895 26.154-100.677 40.867-97.59ZM618.285 280.622l-6.235-4.47s18.587-10.446 38.429-3.52l-4.088-7.274s15.301-1.155 24.207 15.638c4.682 8.828 10.063 19.17 12.262 29.738l7.434 2.084-4.843 5.336 9.12 9.252-10.834-4.24a32.524 32.524 0 0 1-5.562 15.776l-4.47 6.235s-4.436-23.028-3.728-25.552l-1.77 6.311s-5.35-7.627-4.287-11.414l-5.026 3.356.054-7.473-25.299.394 5.38-4.618-15.047-2.177 7.627-5.35s-18.71 3.604-21.288 10.369c-2.578 6.765-13.26 13.3-13.26 13.3l-2.017-7.373s2.284-29.993 23.24-34.328Z"
                    fill="#2f2e41"
                  />
                  <path
                    d="m605.22 294.293.298-1.295c2.89-12.58-19.338-35.975-19.563-36.21l-.395-.412.155-.55c.44-1.568 2.203-2.96 17.659.39 6.018 1.304 12.019 2.894 14.53 3.575-.28-7.182-9.184-16.7-9.279-16.8l-1.12-1.187 1.566-.46c10.266-3.008 22.28 6.972 26.12 10.505l6.419-22.89 12.701 18.761c7.797-11.672 19.076-11.2 19.569-11.172l1.583.086-.76 1.392c-5.344 9.775-6.306 16.196-6.362 19.362 14.216-16.89 27.027-15.418 27.584-15.344l1.942.256-1.346 1.422c-18.61 19.665-20.802 45.606-20.822 45.866l-.067.874Zm-17.05-38.066c3.93 4.26 20.924 23.481 19.516 35.929l66.11-3.597c.545-4.627 3.898-26.648 19.705-44.5-4.308.385-14.47 2.84-25.175 16.522l-1.227 1.567-.525-1.92c-.083-.302-1.872-7.335 5.553-21.623-3.404.322-11.329 2.104-16.93 11.455l-.806 1.345-12.02-17.753-6.169 22-1.21-1.226c-.135-.137-13.031-13.049-23.754-11.51 2.753 3.206 9.338 11.647 8.617 18.283l-.127 1.174-1.137-.319c-12.628-3.541-27.052-6.563-30.421-5.827ZM700.908 236.775a3.587 3.587 0 1 1 4.423-2.485 3.59 3.59 0 0 1-4.423 2.485Zm1.397-4.981a1.587 1.587 0 1 0 1.1 1.956 1.589 1.589 0 0 0-1.1-1.956ZM676 229.79a3.587 3.587 0 1 1 4.422-2.485 3.59 3.59 0 0 1-4.422 2.486Zm1.397-4.981a1.587 1.587 0 1 0 1.1 1.956 1.589 1.589 0 0 0-1.1-1.956ZM638.136 225.89a3.587 3.587 0 1 1 4.422-2.485 3.59 3.59 0 0 1-4.422 2.485Zm1.397-4.981a1.587 1.587 0 1 0 1.1 1.956 1.589 1.589 0 0 0-1.1-1.956ZM577.69 254.615a3.587 3.587 0 1 1 4.422-2.486 3.59 3.59 0 0 1-4.423 2.486Zm1.396-4.982a1.587 1.587 0 1 0 1.1 1.956 1.589 1.589 0 0 0-1.1-1.956ZM601.063 238.331a3.587 3.587 0 1 1 4.422-2.485 3.591 3.591 0 0 1-4.422 2.485Zm1.397-4.981a1.587 1.587 0 1 0 1.1 1.956 1.589 1.589 0 0 0-1.1-1.956Z"
                    fill="#6c63ff"
                  />
                  <path
                    fill="#2f2e41"
                    d="m720.272 575.155-.962-.27-188.501-52.858.539-1.926 187.539 52.589 118.531-422.696L573.112 75.88l-40.313 143.765-1.926-.54 40.855-145.691.961.27 267.194 74.925-.27.962-119.341 425.584zM41.634 613.853c12.428 23.049 38.806 32.943 38.806 32.943s6.227-27.475-6.201-50.524-38.806-32.944-38.806-32.944-6.227 27.476 6.201 50.525Z"
                  />
                  <path
                    d="M50.177 606.27c22.438 13.5 31.08 40.314 31.08 40.314s-27.738 4.926-50.177-8.573S0 597.697 0 597.697s27.738-4.927 50.177 8.573Z"
                    fill="#6c63ff"
                  />
                  <path
                    d="M530.38 100.676a49.004 49.004 0 0 0-8.07-15.67 49.783 49.783 0 0 0-4.17-4.77 49.106 49.106 0 0 0-34.87-14.5H177.73a49.28 49.28 0 0 0-49.23 49.23v483.54a49.28 49.28 0 0 0 49.23 49.23h305.54a49.28 49.28 0 0 0 49.23-49.23v-483.54a48.87 48.87 0 0 0-2.12-14.29Zm.12 497.83a47.287 47.287 0 0 1-47.23 47.23H177.73a47.287 47.287 0 0 1-47.23-47.23v-483.54a47.287 47.287 0 0 1 47.23-47.23h305.54a47.113 47.113 0 0 1 34.25 14.74q.735.78 1.44 1.59a47.12 47.12 0 0 1 11.54 30.9Z"
                    fill="#2f2e41"
                  />
                  <path
                    d="M177.242 143.446c-.056-.13-.124-.25-.185-.375a30.294 30.294 0 0 0 3.314-14.268c0-15.501-9.687-26.328-23.556-26.328s-23.557 10.827-23.557 26.328 9.687 26.328 23.557 26.328a22.226 22.226 0 0 0 17.295-7.723c4.441 7.186 13.026 8.134 13.422 8.174l.468-4.595c-.323-.035-7.944-.927-10.758-7.541Zm-20.427 7.066c-11.15 0-18.938-8.927-18.938-21.709s7.787-21.709 18.938-21.709 18.937 8.927 18.937 21.71a26.092 26.092 0 0 1-2.11 10.606c-6.894-4.189-19.72-1.686-21.46-1.32l.95 4.521c4.712-.986 14.085-1.778 18.165.782a17.668 17.668 0 0 1-14.482 7.12ZM158.5 166.118a8.014 8.014 0 0 0-11.333 11.333l11.333 11.334 11.333-11.334a8.014 8.014 0 0 0-11.333-11.333ZM483.758 573.124c.056.13.124.249.185.374a30.294 30.294 0 0 0-3.314 14.268c0 15.502 9.687 26.328 23.556 26.328s23.557-10.826 23.557-26.328-9.687-26.328-23.557-26.328a22.226 22.226 0 0 0-17.295 7.723c-4.441-7.186-13.026-8.134-13.422-8.174l-.468 4.596c.323.034 7.944.926 10.758 7.54Zm20.427-7.067c11.15 0 18.938 8.927 18.938 21.709s-7.787 21.71-18.938 21.71-18.937-8.928-18.937-21.71a26.092 26.092 0 0 1 2.11-10.607c6.894 4.189 19.72 1.686 21.46 1.32l-.95-4.52c-4.712.986-14.085 1.777-18.165-.783a17.668 17.668 0 0 1 14.482-7.12ZM502.5 550.451a8.014 8.014 0 0 0 11.333-11.333L502.5 527.785l-11.333 11.333a8.014 8.014 0 0 0 11.333 11.333Z"
                    fill="#6c63ff"
                  />
                  <path
                    d="M355.146 340.447c-13.614-23.004-40.549-24.076-40.549-24.076s-26.246-3.356-43.083 31.679c-15.693 32.655-37.351 64.185-3.486 71.83l6.117-19.04 3.788 20.457a132.507 132.507 0 0 0 14.49.247c36.266-1.17 70.804.343 69.692-12.671-1.478-17.3 6.13-46.292-6.97-68.426Z"
                    fill="#2f2e41"
                  />
                  <path
                    d="M304.922 418.823c.066 2.59.046 5.32-1.24 7.568-2.551 4.456-8.778 5.123-12.523 8.636-3.94 3.693-4.385 9.688-4.573 15.084-.196 5.642-.362 11.47 1.697 16.726a40.66 40.66 0 0 0 4.75 8.161q3.43 4.944 6.924 9.844a42.503 42.503 0 0 0 4.145 5.203c4.171 4.249 9.893 6.6 15.605 8.279 3.691 1.084 7.677 1.928 11.339.75a21.707 21.707 0 0 0 6.593-4.054c2.724-2.163 5.49-4.37 7.463-7.233 3.075-4.461 3.927-10.045 4.564-15.426a332.863 332.863 0 0 0 2.194-47.951 11.753 11.753 0 0 0-.915-5.095c-1.897-3.703-6.977-4.494-9.653-7.68-2.289-2.723-2.382-6.61-2.362-10.167l.05-9.056a3.794 3.794 0 0 0-.44-2.207 3.738 3.738 0 0 0-2.598-1.212 87.57 87.57 0 0 0-17.038-1.14c-4.623.142-13.494-.245-17.492 2.33-3.629 2.337.915 8.793 1.755 12.42a80.911 80.911 0 0 1 1.755 16.22Z"
                    fill="#a0616a"
                  />
                  <circle cx="315.534" cy="366.668" r="36.604" fill="#a0616a" />
                  <path
                    d="M300.462 457.333a53.547 53.547 0 0 1-5.709-11.087c-1.309-3.956-1.652-8.377-.099-12.244-3.955-2.295-9.326-.437-12.206 3.115s-3.762 8.313-4.016 12.88.015 9.198-.979 13.662c-2.198 9.876-10.356 17.995-10.962 28.094-.597 9.936 6.216 18.591 9.568 27.963a46.63 46.63 0 0 1 2.498 18.202c-.109 1.992-.234 4.263 1.172 5.68a6.478 6.478 0 0 0 2.534 1.365c16.173 5.69 33.643 6.182 50.783 6.616l28.31.717a9.023 9.023 0 0 0 5-.837c2.539-1.557 2.879-5.048 2.922-8.027.372-25.656-.72-51.309-1.81-76.944-.396-9.292-.798-18.638-2.768-27.727-.502-2.315-1.325-4.889-3.461-5.91-1.809-.865-3.955-.305-5.835.39a46.457 46.457 0 0 0-21.758 16.749c-5.809 8.267-8.666 18.184-14.351 26.514-4.125 6.045-6.511.777-9.26-3.675q-4.785-7.75-9.573-15.496Z"
                    fill="#fff"
                  />
                  <path
                    d="M296.08 434.635c-.72.51-1.43 1.05-2.11 1.62a40.85 40.85 0 0 0-6.8 7.16 56.722 56.722 0 0 0-7.7 14.53c-3.32 9.1-4.76 18.76-6.14 28.34a68.398 68.398 0 0 0-.97 10.68c.21 13.16 7.99 25.35 8 38.52 0 .5-.01.99-.04 1.49a43.26 43.26 0 0 1-.76 6.42c-.57 3.09-1.39 6.14-2.2 9.18-2.04 7.62-4.24 15.52-8.22 22.21-.4.68-.83 1.35-1.27 2h-28c.22-.67.45-1.33.67-2q7.155-21.195 14.3-42.38c1.46-4.32 2.92-8.66 3.95-13.1a124.075 124.075 0 0 0 2.41-16.63q1.65-17.385 2.17-34.84c.13-4.18.22-8.45 1.57-12.41a40.598 40.598 0 0 1 4.98-9.08l8.67-13.05c1.61-2.42 3.3-4.91 5.78-6.42 2.07-1.27 4.53-1.73 6.71-2.8a34.312 34.312 0 0 0 3.94-2.61c3.26-2.31 7.09-4.74 9.9-2.38a5.514 5.514 0 0 1 1.16 1.33 6.691 6.691 0 0 1 .43.77c2.7 5.84-6.8 10.88-10.43 13.45Z"
                    fill="#2f2e41"
                  />
                  <path
                    d="M388.32 576.785H258.64c.7-.64 1.39-1.31 2.06-2 .1-.1.19-.2.29-.3 4.96-5.15 6.09-11.48 8.58-18.18q2.805-7.575 5.61-15.14a7.831 7.831 0 0 1 1.43-2.69 4.437 4.437 0 0 1 1.97-1.18 7.642 7.642 0 0 1 1.74-.32 19.407 19.407 0 0 1 2.53 0q34.905 1.8 69.76 4.39l9 .69c2.45 1.82 4.87 3.75 7.18 5.79 7.51 6.6 14.02 14.37 17.75 23.55.45 1.11.86 2.24 1.2 3.39.22.66.41 1.33.58 2ZM349.127 338.23l-26.61-13.939-36.747 5.702-7.603 33.58 18.926-.728 5.287-12.337v12.133l8.733-.336 5.068-19.64 3.168 20.908 31.045-.634-1.267-24.709z"
                    fill="#2f2e41"
                  />
                  <path
                    d="M388.32 576.785h-29.28c-.21-.66-.41-1.33-.6-2a157.26 157.26 0 0 1-4.54-22.68c-.31-2.19-.58-4.39-.83-6.58-.16-1.39-.31-2.77-.46-4.16-1.68-15.44-2.97-31.03-7.69-45.81-.57-1.79-1.19-3.57-1.79-5.35a63.096 63.096 0 0 1-2.6-9.41c-1.28-7.32-.32-14.9-1.64-22.21-.74-4.08-2.21-7.67-3.1-11.41a23.108 23.108 0 0 1-.66-6.91 14.882 14.882 0 0 1 7.79-3.86c1.01-.17 2.15-.3 2.76-1.11a3.464 3.464 0 0 0 .46-2.04 97.957 97.957 0 0 0-.81-14.11c-.2-1.64-.45-3.28-.75-4.91-.01-.08-.03-.15-.04-.23 2.44-1.06 5.19-1.07 7.84-1.06 2.89.01 5.77.01 8.65.02q7.995.03 15.99.05c4.96.01 10.09.06 14.6 2.11 4.66 2.13 8.2 6.24 10.54 10.8s3.61 9.58 4.76 14.57a19.52 19.52 0 0 1 .5 4.21c.22 11.26-8.18 22.6-9.02 34.11-.27 3.73.04 7.49-.3 11.22-.34 3.74-1.34 7.4-1.52 11.14-.01.19-.02.39-.02.58-.11 4.87 1.31 9.64 2.95 14.23 2.54 7.13 5.63 14.04 8.82 20.91 3.08 6.65 6.24 13.27 9.08 20.01a34.263 34.263 0 0 1 2.95 9.89 13.724 13.724 0 0 1-1.51 7.99 9.376 9.376 0 0 1-1.19 1.69l-.02.02c-.09.1-.18.2-.27.29h-29.05Z"
                    fill="#2f2e41"
                  />
                  <path
                    d="M416.21 566.525a11.082 11.082 0 0 1-1.07 3.83c-.05.12-.1.23-.15.35-.58 1.37-1.17 2.72-1.78 4.08-.3.66-.6 1.33-.91 2h-16.56a18.536 18.536 0 0 0 1.66-2c2.54-3.53 4.01-7.82 6.6-11.63a8.954 8.954 0 0 1 1.21-1.44c4.15-4.02 11.26-3.2 11 4.81Z"
                    fill="#ffb8b8"
                  />
                  <path
                    d="M426.99 576.785a19.618 19.618 0 0 0 .53-2c.12-.53.22-1.05.3-1.58.53-3.49.52-7.06 1.35-10.49 1.17-4.91 4.68-10.72 1.79-14.85a15.69 15.69 0 0 0 6.21-2.78c1.72-1.5 2.72-4.1 1.68-6.14-1.03-2.01-3.82-3.34-3.44-5.57a5.313 5.313 0 0 1 .98-1.94 14.53 14.53 0 0 0-.25-15.94c-.91-1.3-2.03-2.44-2.86-3.8a22.663 22.663 0 0 1-2.07-5.27 98.166 98.166 0 0 0-12.63-26.18 17.372 17.372 0 0 1-2.79-5.16 21.304 21.304 0 0 1-.22-6.13c.2-8.08-2.82-15.97-7.17-22.77-.32-.5-.65-.99-.98-1.48-4.2-6.19-9.41-11.62-14.6-17.01-2.14 1-4.03 1.65-5.14 3.73a11.086 11.086 0 0 0-.99 3.72c-1.42 9.9-2.65 19.86-3.61 29.81-.48 5.03-.97 10.1-.4 15.12s2.28 10.05 5.68 13.78c2.13 2.34 4.83 4.08 7.14 6.24q.555.525 1.08 1.08a35.41 35.41 0 0 1 4.41 5.79 49.92 49.92 0 0 1 7.34 29.93 48.64 48.64 0 0 1-.75 5.64 23.327 23.327 0 0 1-2.66 7.6c-1.05 1.73-2.43 3.24-3.38 5.03s-1.4 4.02-.46 5.81a11.831 11.831 0 0 1 4.13.74 17.53 17.53 0 0 1 7.8 5.95 25.938 25.938 0 0 1 1.98 3.04 37.448 37.448 0 0 1 1.98 4.08c.24.55.47 1.12.69 1.69a1.659 1.659 0 0 1 .12.31Z"
                    fill="#2f2e41"
                  />
                  <path
                    fill="#6c63ff"
                    d="m345.231 402.805-21.204 9.248-4.976.492-22.605-4.914.997 20.115 22.1-10.225 4.976-.492 23.676 5.696-2.964-19.92z"
                  />
                  <path
                    d="M387.74 574.785c.22.66.41 1.33.58 2h7.42a18.536 18.536 0 0 0 1.66-2Zm-195.99-439v441h276.5v-441Zm274.5 439h-272.5v-437h272.5Zm-78.51 0c.22.66.41 1.33.58 2h7.42a18.536 18.536 0 0 0 1.66-2Z"
                    fill="#2f2e41"
                  />
                  <path
                    d="m282.601 328.718.171-.86c.051-.255 4.945-25.825-7.665-49.784l-.912-1.733 1.939.277c.556.08 13.289 2.122 22.417 22.222.801-3.063 1.608-9.505-.898-20.36l-.356-1.545 1.548.344c.482.107 11.469 2.697 15.825 16.04l17.295-14.633v23.772c4.651-2.366 18.914-8.731 27.986-3.062l1.384.865-1.399.84c-.119.072-11.262 6.831-13.471 13.671 2.603.022 8.81.112 14.957.48 15.786.948 17.108 2.765 17.108 4.394v.57l-.49.29c-.28.166-28 16.691-28.614 29.584l-.064 1.327Zm62.592-11.952h-1.18l.194-1.165c1.097-6.584 9.717-12.934 13.233-15.277-9.909-4.377-25.812 4.573-25.98 4.669l-1.495.854v-22.849l-16.367 13.849-.413-1.514c-2.868-10.515-10.018-14.37-13.208-15.6 3.292 15.762-.33 22.05-.492 22.32l-1.024 1.706-.758-1.84c-6.614-16.064-15.735-21.172-19.78-22.706 10.4 21.457 7.683 43.565 6.959 48.168l62.683 21.313c2.006-12.365 23.559-26.285 28.493-29.325-3.046-1.619-17.75-2.603-30.865-2.603ZM269.171 266.613a3.587 3.587 0 1 1 3.587 3.587 3.59 3.59 0 0 1-3.587-3.587Zm2 0a1.587 1.587 0 1 0 1.587-1.587 1.589 1.589 0 0 0-1.587 1.587ZM295.041 266.613a3.587 3.587 0 1 1 3.587 3.587 3.59 3.59 0 0 1-3.587-3.587Zm2 0a1.587 1.587 0 1 0 1.587-1.587 1.589 1.589 0 0 0-1.587 1.587ZM332.552 273.081a3.587 3.587 0 1 1 3.587 3.587 3.59 3.59 0 0 1-3.587-3.587Zm2 0a1.587 1.587 0 1 0 1.587-1.587 1.589 1.589 0 0 0-1.587 1.587ZM382.998 317.059a3.587 3.587 0 1 1 3.586 3.587 3.59 3.59 0 0 1-3.586-3.587Zm2 0a1.587 1.587 0 1 0 1.586-1.587 1.589 1.589 0 0 0-1.586 1.587ZM364.889 295.07a3.587 3.587 0 1 1 3.587 3.587 3.59 3.59 0 0 1-3.587-3.587Zm2 0a1.587 1.587 0 1 0 1.587-1.587 1.589 1.589 0 0 0-1.587 1.587Z"
                    fill="#6c63ff"
                  />
                  <path fill="#3f3d56" d="M12 645.285h909v2H12z" />
                </svg>
                <Heading>HEYY</Heading>
                <div style={ballStyle}></div>
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__m02Uz)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__pRDjd)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"439px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/blank_project/images/dsc00619Jpg.jpeg",
                        fullWidth: 4592,
                        fullHeight: 3056,
                        aspectRatio: undefined,
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__jchb1)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"437px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/blank_project/images/dsc00625Jpg.jpeg",
                        fullWidth: 4592,
                        fullHeight: 3056,
                        aspectRatio: undefined,
                      }}
                    />

                    <Slider
                      className={classNames(
                        "__wab_instance",
                        sty.slider__hazjc
                      )}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__y5Bjf)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        src={
                          "https://via.placeholder.com/150x90/FF0000/FFFFFF/?text=Slide_1" as const
                        }
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__kOf0W)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        src={
                          "https://via.placeholder.com/150x90/00FF00/FFFFFF/?text=Slide_2" as const
                        }
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__zeXxO)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        src={
                          "https://via.placeholder.com/150x90/0000FF/FFFFFF/?text=Slide_3" as const
                        }
                      />
                    </Slider>
                  </div>
                ) : null}
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hDw9Q)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__umVwy)}
                      displayHeight={"216px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"250px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/blank_project/images/dsc00625Jpg.jpeg",
                        fullWidth: 4592,
                        fullHeight: 3056,
                        aspectRatio: undefined,
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__e5X3M)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"251px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/blank_project/images/dsc00640Jpg.jpeg",
                        fullWidth: 4592,
                        fullHeight: 3056,
                        aspectRatio: undefined,
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__a6Syh)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"282px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/blank_project/images/dsc00619Jpg.jpeg",
                        fullWidth: 4592,
                        fullHeight: 3056,
                        aspectRatio: undefined,
                      }}
                    />
                  </div>
                ) : null}
                {/* <Carousel>
                  {items.map((item) => (
                    <Box
                      boxSize={"full"}
                      as={item.mediatype}
                      onClick={() => setMainImgString(item.srcurl)}
                      controls
                      src={item.srcurl}
                      poster={item.thumbnail}
                      alt="Big Buck Bunny"
                      objectFit="contain"
                      sx={{
                        aspectRatio: "16/9",
                      }}
                    />
                  ))}
                </Carousel> */}
              </div>

              <div className={classNames(projectcss.all, sty.column__ulj3T)}>
                <div className={classNames(projectcss.all, sty.freeBox__aDw8V)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <Heading>{"Madisonopoly"}</Heading>
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tIusW
                    )}
                  >
                    <Center>
                      <HStack spacing="24px" marginBottom="40px">
                        <VStack>
                          <FaGrinTears size={28} />
                          <Center>
                            <Text textAlign="center">Quality Time</Text>
                          </Center>
                        </VStack>
                        <VStack>
                          <FaComments size={28} />
                          <Center>
                            <Text textAlign="center"> Convo Starter </Text>
                          </Center>
                        </VStack>
                        <VStack>
                          <FaUniversity size={28} />
                          <Center>
                            <Text textAlign="center"> Proud Alumni</Text>
                          </Center>
                        </VStack>
                      </HStack>
                    </Center>

                    <React.Fragment>
                      <Center>
                        <Text
                          marginTop="10px"
                          marginBottom="10px"
                          fontWeight="bold"
                        >
                          {"Price : $49"}
                        </Text>
                      </Center>

                      <React.Fragment>
                        {
                          "The memorable experiences in Langdon Street, the sleepless nights we had in College Library during finals week, that 2 AM Mac N Cheese slice at Ian's Pizza on Franklin, and many more..\n\nHow about buying those properties and renting it to your friends in a Monopoly game? You can build houses and hotels on your favorite Madtown spots.\n\nA token of your time spent in Madison or the token of new adventures :)\n\nThe box comes with:\n"
                        }
                      </React.Fragment>
                      <ul
                        data-plasmic-name={"ul"}
                        data-plasmic-override={overrides.ul}
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__kAwxO
                          )}
                        >
                          {"32 red houses"}
                        </li>

                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__lFrwv
                          )}
                        >
                          {"12 green hotels"}
                        </li>

                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___8GCak
                          )}
                        >
                          {"28 Title Deed Cards"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__kAwxO
                          )}
                        >
                          {"16 Dare Cards"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__kAwxO
                          )}
                        >
                          {"16 Campus Mail Cards"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__pQtDz
                          )}
                        >
                          {"20.5K in game cash"}
                        </li>

                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__pbGge
                          )}
                        >
                          {"6 game tokens"}
                        </li>

                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__x536M
                          )}
                        >
                          {"1 game box"}
                        </li>

                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__ogQjL
                          )}
                        >
                          {'20 X 20" gameboard'}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___8GCak
                          )}
                        >
                          {"2 Dices"}
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__ogQjL
                          )}
                        >
                          {"30 Day Moneyback Guarantee "}
                        </li>
                      </ul>
                    </React.Fragment>
                  </div>
                </div>
                <form onSubmit={handleSubmit} method="POST">
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gvTr)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lCR5
                      )}
                    >
                      {"Quantity:"}
                    </div>

                    <Select
                      data-plasmic-name={"select"}
                      data-plasmic-override={overrides.select}
                      className={classNames("__wab_instance", sty.select)}
                      defaultValue={"value1" as const}
                      onChange={handleChange}
                    >
                      <Select__Option
                        className={classNames(
                          "__wab_instance",
                          sty.option__hoiXq
                        )}
                        value={"1" as const}
                      >
                        {"1"}
                      </Select__Option>

                      <Select__Option
                        className={classNames(
                          "__wab_instance",
                          sty.option__iuXtT
                        )}
                        value={"2" as const}
                      >
                        {"2"}
                      </Select__Option>

                      <Select__Option
                        className={classNames(
                          "__wab_instance",
                          sty.option__q6Qru
                        )}
                        value={"3" as const}
                      >
                        {"3"}
                      </Select__Option>

                      <Select__Option
                        className={classNames(
                          "__wab_instance",
                          sty.option___0ZIi9
                        )}
                        value={"4" as const}
                      >
                        {"4"}
                      </Select__Option>

                      <Select__Option
                        className={classNames(
                          "__wab_instance",
                          sty.option__ivQkk
                        )}
                        value={"5" as const}
                      >
                        {"5"}
                      </Select__Option>
                    </Select>
                    <section>
                      <button type="submit" role="link">
                        Proceed to Secure Checkout
                      </button>
                    </section>
                    <style jsx>
                      {`
                        section {
                          background: #ffffff;
                          display: flex;
                          flex-direction: column;
                          width: 400px;
                          height: 112px;
                          margin-top: 24px;
                          border-radius: 6px;
                          justify-content: space-between;
                        }
                        button {
                          height: 36px;
                          background: #556cd6;
                          border-radius: 4px;
                          color: white;
                          border: 0;
                          font-weight: 600;
                          cursor: pointer;
                          transition: all 0.2s ease;
                          box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);
                        }
                        button:hover {
                          opacity: 0.8;
                        }
                      `}
                    </style>
                  </div>
                </form>
                <HStack>
                  <Link
                    href="https://www.instagram.com/madisonopoly.wi/"
                    passHref
                  >
                    <a target="_blank" rel="noopener noreferrer">
                      <FaInstagram size={24} />
                    </a>
                  </Link>
                  <Link
                    href="https://www.tiktok.com/@madisonopoly"
                    passHref={true}
                  >
                    <a target="_blank" rel="noopener noreferrer">
                      <FaTiktok size={24} />
                    </a>
                  </Link>
                  <Link
                    href="https://twitter.com/madisonopolyy"
                    passHref={true}
                  >
                    <a target="_blank" rel="noopener noreferrer">
                      <FaTwitter size={24} />
                    </a>
                  </Link>
                </HStack>
              </div>
            </div>
          </div>
        </div>
      </div>
      <FooterComponent
        data-plasmic-name={"footerComponent"}
        data-plasmic-override={overrides.footerComponent}
        className={classNames("__wab_instance", sty.footerComponent)}
      />
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "madisonopolyHeaderFinal",
    "svg",
    "columns",
    "ul",
    "select",
    "footerComponent",
  ],
  madisonopolyHeaderFinal: ["madisonopolyHeaderFinal"],
  svg: ["svg"],
  columns: ["columns", "ul", "select"],
  ul: ["ul"],
  select: ["select"],
  footerComponent: ["footerComponent"],
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  madisonopolyHeaderFinal: typeof MadisonopolyHeaderFinal;
  svg: "svg";
  columns: "div";
  ul: "ul";
  select: typeof Select;
  footerComponent: typeof FooterComponent;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPrdct__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPrdct__VariantsArgs;
    args?: PlasmicPrdct__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPrdct__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicPrdct__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPrdct__ArgProps,
      internalVariantPropNames: PlasmicPrdct__VariantProps,
    });

    return PlasmicPrdct__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPrdct";
  } else {
    func.displayName = `PlasmicPrdct.${nodeName}`;
  }
  return func;
}

export const PlasmicPrdct = Object.assign(
  // Top-level PlasmicPrdct renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    madisonopolyHeaderFinal: makeNodeComponent("madisonopolyHeaderFinal"),
    svg: makeNodeComponent("svg"),
    columns: makeNodeComponent("columns"),
    ul: makeNodeComponent("ul"),
    select: makeNodeComponent("select"),
    footerComponent: makeNodeComponent("footerComponent"),

    // Metadata about props expected for PlasmicPrdct
    internalVariantProps: PlasmicPrdct__VariantProps,
    internalArgProps: PlasmicPrdct__ArgProps,
  }
);

export default PlasmicPrdct;
/* prettier-ignore-end */
